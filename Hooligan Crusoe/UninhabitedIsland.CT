<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"适用于 UninhabitedIsland.exe v1.6.0+"</Description>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"初始化"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$LUA}
if syntaxcheck then return end
if not OpenGameProcess("UninhabitedIsland.exe", true) then return end

{$ASM}



[DISABLE]
{$LUA}
if syntaxcheck then return end

{$ASM}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"玩家数据"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$LUA}
local classID = mono_findClass("Ephra.Framework.UnI", "GameManager")
local instance = mono_getClassInstance(classID)
if not instance then return end

local offsets = mono_getClassFieldOffsets(classID)
if not offsets then return end

PlayerEntityOffs = mono_getClassFieldOffsets("Ephra.Framework.UnI", "PlayerEntity")
PlayerDataFormatOffs = mono_getClassFieldOffsets("Ephra.Framework", "ArchiveDataFormat")

registerSymbol("pGameManager", instance)
registerSymbol("pPlayerEntity", instance + offsets.PlayerEntity)
registerSymbol("pPlayerDataFormat", instance + offsets._data)
registerSymbol("pPlayerStamina", instance + offsets._staminaValue)

{$ASM}


[DISABLE]
{$LUA}
PlayerEntityOffs = nil
PlayerDataFormatOffs = nil

unregisterSymbol("pGameManager")
unregisterSymbol("pPlayerEntity")
unregisterSymbol("pPlayerDataFormat")
unregisterSymbol("pPlayerStamina")

{$ASM}

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"当前时间"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>8 Bytes</VariableType>
              <Address>pPlayerDataFormat</Address>
              <Offsets>
                <Offset>PlayerDataFormatOffs.Time</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"金币"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerDataFormat</Address>
              <Offsets>
                <Offset>PlayerDataFormatOffs.Gold</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"当前体力"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerStamina</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"移动速度（速度较高时可以穿越障碍）"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"移动速度"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerEntity</Address>
                  <Offsets>
                    <Offset>PlayerEntityOffs.MoveSpeed</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"跑步加速倍率"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerEntity</Address>
                  <Offsets>
                    <Offset>PlayerEntityOffs.AccelerateMultiple</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"骑行加速倍率"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerEntity</Address>
                  <Offsets>
                    <Offset>PlayerEntityOffs.RidingAccelerateMultiple</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"战斗属性"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$LUA}
local pAttributeEntity = getAddress("[pPlayerEntity]+PlayerEntityOffs.Attribute")
pAttributeEntity = readPointer(pAttributeEntity)

local offsets = mono_getClassFieldOffsets("Ephra.Framework", "AttributeEntity")
if not offsets then return end

PlayerAttribute = {}
for name, offset in pairs(offsets) do
    PlayerAttribute[name] = pAttributeEntity + offset
end

{$ASM}


[DISABLE]
{$LUA}
PlayerAttribute = nil

{$ASM}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>50</ID>
                  <Description>"基础属性"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>40</ID>
                      <Description>"InitialHealth"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute.InitialHealth</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>41</ID>
                      <Description>"InitialHealthRegenerationRate"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute.InitialHealthRegenerationRate</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>42</ID>
                      <Description>"InitialAttackPower"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute.InitialAttackPower</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>43</ID>
                      <Description>"InitialCriticalHitRate"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute.InitialCriticalHitRate</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>44</ID>
                      <Description>"InitialCriticalHitMultiple"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute.InitialCriticalHitMultiple</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>45</ID>
                      <Description>"InitialDefense"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute.InitialDefense</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>46</ID>
                      <Description>"InitialAttackInterval"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute.InitialAttackInterval</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>47</ID>
                      <Description>"InitialAttackRange"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute.InitialAttackRange</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>48</ID>
                      <Description>"InitialBulletCount"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute.InitialBulletCount</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>49</ID>
                      <Description>"InitialHitCooldown"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute.InitialHitCooldown</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>51</ID>
                  <Description>"当前属性"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>52</ID>
                      <Description>"Health"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute._healthValue</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>53</ID>
                      <Description>"HealthRegenerationRate"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute._healthRegenerationRate</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>54</ID>
                      <Description>"AttackPower"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute._attackPower</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>55</ID>
                      <Description>"CriticalHitRate"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute._criticalHitRate</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>56</ID>
                      <Description>"CriticalHitDamage"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute._criticalHitDamage</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>57</ID>
                      <Description>"Defense"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute._defense </Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>58</ID>
                      <Description>"AttackInterval"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute._attackInterval</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>59</ID>
                      <Description>"AttackRange"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>PlayerAttribute._attackRange</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>60</ID>
                      <Description>"BulletCount"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>PlayerAttribute._bulletCount</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"物品栏"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$LUA}
local instances = mono_getClassInstances("Ephra.Framework.UnI", "GameWindow")
if not instances then return end

local pGameWindow = 0
for i = 1, #instances do
    local _mediator = readPointer(instances[i] + 0x18)
    if _mediator ~= 0 then
        pGameWindow = instances[i]
        break
    end
end

if pGameWindow == 0 then return end

local pInventoryGrids = readPointer(pGameWindow + 0xB8)
pInventoryGrids = pInventoryGrids + 0x20

function InventoryGridQuantity(index)
    local pInventoryGridEntity = readPointer(pInventoryGrids + 8 * index)
    local pInventoryItemFormat = readPointer(pInventoryGridEntity + 0x48)
    return pInventoryItemFormat + 0x18
end

{$ASM}


[DISABLE]


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"物品栏 1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(0)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"物品栏 2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(1)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"物品栏 3"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(2)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"物品栏 4"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(3)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"物品栏 5"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(4)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"物品栏 6"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(5)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"物品栏 7"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(6)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"物品栏 8"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(7)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"物品栏 9"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(8)</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"物品栏 0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryGridQuantity(9)</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"钓鱼"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>18</ID>
              <Description>"必定获得鱼"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(patchAddress, Ephra.Framework.UnI.FishingPopup:OnCompleteFishing+16e)
define(bytes, 66 0F 2F C8 40 0F 92 C0)

[ENABLE]
assert(patchAddress,bytes)

alloc(newmem,2048,patchAddress)
label(returnhere)
label(originalcode)
label(exit)

label(floatNum)

newmem: //this is allocated memory, you have read,write,execute access
movss xmm0,[floatNum]

originalcode:
comisd xmm1,xmm0
setb al

exit:
jmp returnhere

floatNum:
dd (float)0.0

patchAddress:
jmp newmem
nop 3
returnhere:




[DISABLE]
dealloc(newmem)
patchAddress:
db 66 0F 2F C8 40 0F 92 C0
//comisd xmm1,xmm0
//setb al
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"立即钓鱼（配合使用 必定获得鱼）"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(patchAddress, Ephra.Framework.UnI.FishingPopup:ScheduleUpdate+94)
define(bytes, F3 0F 5A C9 66 0F 2F C8)

[ENABLE]
assert(patchAddress,bytes)

alloc(newmem,2048,patchAddress)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access

originalcode:
cvtss2sd xmm1,xmm1
movsd xmm0,xmm1
comisd xmm1,xmm0

exit:
jmp returnhere

patchAddress:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
dealloc(newmem)
patchAddress:
db bytes
//cvtss2sd xmm1,xmm1
//comisd xmm1,xmm0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"一击即毁"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(patchAddress, Ephra.Framework.UnI.HarvestOnceCropCommand:OnExecute+c0)
define(bytes, 48 63 48 2C FF C9 89 48 2C)

[ENABLE]
assert(patchAddress,bytes)

patchAddress:
mov [rax+2C],0
nop 2



[DISABLE]
patchAddress:
db bytes
//movsxd rcx,dword ptr [rax+2C]
//dec ecx
//mov [rax+2C],ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"立即成熟（重新进入当前场景）"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$LUA}
local classID = mono_findClass("Ephra.Framework.UnI", "CropEntity")
local instances = mono_getClassInstances(classID)
if not instances then return end
if #instances == 0 then return end

local CropEntityOffs = mono_getClassFieldOffsets(classID)
local CropFormatOffs = mono_getClassFieldOffsets("Ephra.Framework", "CropFormat")
local EnvironmentCropFormatOffs = mono_getClassFieldOffsets("Ephra.Framework", "EnvironmentCropFormat")
local CropGrowthOffs = mono_getClassFieldOffsets("Ephra.Framework", "CropGrowth")

for i = 1, #instances do
    local pCropEntity = instances[i]

    local pCropFormat = readPointer(pCropEntity + CropEntityOffs._format)
    if pCropFormat == 0 then
        goto CONTINUE
    end

    if readInteger(pCropFormat + CropFormatOffs.SeedItemID) == 0xFFFFFFFF then
        goto CONTINUE
    end

    local MaturityDays = readInteger(pCropFormat + CropFormatOffs.MaturityDays)
    if MaturityDays == 0xFFFFFFFF then
        goto CONTINUE
    end
    writeByte(pCropFormat + CropFormatOffs.GrowthNeedWater, 0)


    local pEnvironmentCropFormat = readPointer(pCropEntity + CropEntityOffs._environmentCropFormat)
    if pEnvironmentCropFormat == 0 then
        goto CONTINUE
    end
    writeInteger(pEnvironmentCropFormat + EnvironmentCropFormatOffs.CropGrowthDay, MaturityDays)
    writeByte(pEnvironmentCropFormat + EnvironmentCropFormatOffs.GrowthNeedWater, 0)


    local pCropGrowthData = readPointer(pCropEntity + CropEntityOffs._cropGrowthData)
    if pCropGrowthData == 0 then
        goto CONTINUE
    end
    writeInteger(pCropGrowthData + CropGrowthOffs.GrowthDay, MaturityDays)


    ::CONTINUE::
end

{$ASM}

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"立即满 Sex 条"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(patchAddress, Ephra.Framework.UnI.SexWindow:OnRefreshClimaxValue+8d)
define(bytes, F2 0F 59 CA F2 0F 58 C1)

[ENABLE]
assert(patchAddress,bytes)

alloc(newmem,2048,patchAddress)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access

originalcode:
//mulsd xmm1,xmm2
divsd xmm2,xmm1
addsd xmm0,xmm2

exit:
jmp returnhere

patchAddress:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
dealloc(newmem)
patchAddress:
db bytes
//mulsd xmm1,xmm2
//addsd xmm0,xmm1
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>local function AddCompactMenu(defaultCompact)
    if compactMenuItem then return end

    local state = not defaultCompact
    local mainForm = getMainForm()
    local toggleView = function()
        compactMenuItem.Caption = state and "[ 精简视图 ]" or "[ 完整视图 ]"
        mainForm.Splitter1.Visible = state
        mainForm.Panel4.Visible = state
        mainForm.Panel5.Visible = state
    end

    local menuParent = mainForm.Menu.Items
    compactMenuItem = createMenuItem(menuParent)
    menuParent.add(compactMenuItem)
    compactMenuItem.OnClick = function()
        state = not state
        toggleView()
    end
    toggleView()
end

AddCompactMenu(true)

function OpenGameProcess(processName, enableMono)
    local pid = getProcessIDFromProcessName(processName)
    if not pid then
        showMessage("先启动游戏，然后重新开启此选项")
        return false
    end
    if getOpenedProcessID() ~= pid then
        openProcess(pid)
    end
    if enableMono then
        if LaunchMonoDataCollector() == 0 then
            showMessage("激活 Mono 功能失败！")
            return false
        end
    end
    return true
end

function mono_getClassInstance(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    else
        namespace = mono_class_getNamespace(classID)
    end

    local instance = mono_class_findInstancesOfClassListOnly(namespace, classID)
    if not instance or #instance == 0 then
        return nil
    end
    return instance[1]
end

function mono_getClassInstances(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    else
        namespace = mono_class_getNamespace(classID)
    end

    local instance = mono_class_findInstancesOfClassListOnly(namespace, classID)
    if not instance or #instance == 0 then
        return nil
    end
    return instance
end

function mono_getClassFieldOffsets(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    end

    local fields = mono_class_enumFields(classID)
    if not fields or #fields == 0 then
        return nil
    end

    local t = {}
    for i = 1, #fields do
        t[fields[i].name] = fields[i].offset
    end
    return t
end
</LuaScript>
</CheatTable>
