<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"初始化"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$LUA}
if not OpenGameProcess("バレないように裸コートで露出するセレカさん.exe", true) then
    return
end

local classID = mono_findClass("HadakaCoat.Scripts.Common", "GameModel")

pGameModel = mono_getClassStaticFieldAddress(classID)
GameModel = mono_getClassStaticFields(pGameModel, classID)

{$ASM}



[DISABLE]
{$LUA}
pGameModel = nil
GameModel = nil

{$ASM}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"金钱"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>GameModel.Gold</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"RP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>GameModel.totalRankPoint</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"已完成所有任务"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:否
1:是
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>GameModel.OnceAllMissionComplete</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"倍率"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$LUA}
local classID = mono_findClass("HadakaCoat.Masters", "MasterReferencer")
local baseAddr = mono_getClassStaticFieldAddress(classID)
local MasterReferencerOffs = mono_getClassFieldOffsets(classID)

local pMasterReferencer = baseAddr + MasterReferencerOffs.instance
if readPointer(pMasterReferencer) == 0 then return end

pPlayerMaster = readPointer(pMasterReferencer) + MasterReferencerOffs.PlayerMaster
PlayerMasterOffs = mono_getClassFieldOffsets("HadakaCoat.Masters", "PlayerMaster")

{$ASM}



[DISABLE]
{$LUA}
pPlayerMaster = nil
PlayerMasterOffs = nil

{$ASM}

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>45</ID>
              <Description>"RiseStrangerScaleEasy"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerMaster</Address>
              <Offsets>
                <Offset>PlayerMasterOffs.RiseStrangerScaleEasy</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"RiseStrangerScaleNormal"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerMaster</Address>
              <Offsets>
                <Offset>PlayerMasterOffs.RiseStrangerScaleNormal</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"RiseStrangerScaleHard"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerMaster</Address>
              <Offsets>
                <Offset>PlayerMasterOffs.RiseStrangerScaleHard</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"露出（每次需要重新启用）"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$LUA}
local classID = mono_findClass("HadakaCoat.Objects3D.Sellestia.Scripts", "PlayerController")

local baseAddress = mono_getClassStaticFieldAddress(classID)
PlayerControllerOffs = mono_getClassFieldOffsets(classID)

pPlayerController = baseAddress + PlayerControllerOffs.Instance
if readPointer(pPlayerController) == 0 then return end


{$ASM}



[DISABLE]
{$LUA}
pPlayerController = nil
PlayerControllerOffs = nil

{$ASM}

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>36</ID>
              <Description>"NoisyLevel"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerController</Address>
              <Offsets>
                <Offset>PlayerControllerOffs.NoisyLevel</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"移动速度"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerController</Address>
              <Offsets>
                <Offset>PlayerControllerOffs.moveSpeed</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"BareyasusaValue"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerController</Address>
              <Offsets>
                <Offset>PlayerControllerOffs.BareyasusaValue</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"DokidokiValue"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerController</Address>
              <Offsets>
                <Offset>PlayerControllerOffs.DokidokiValue</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"EcstasyGauge"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerController</Address>
              <Offsets>
                <Offset>PlayerControllerOffs.EcstasyGauge</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"快速高潮"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,"GameAssembly.dll"+30953B) 
label(returnhere)
label(originalcode)
label(exit)

label(climaxRate)
registersymbol(climaxRate)

newmem: //this is allocated memory, you have read,write,execute access
mulss xmm0,[climaxRate]

originalcode:
//mulss xmm0,[GameAssembly.dll.rdata+3E7CA0]

exit:
jmp returnhere

climaxRate:
dd (float)0.4

"GameAssembly.dll"+30953B:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
unregistersymbol(climaxRate)

dealloc(newmem)
"GameAssembly.dll"+30953B:
db F3 0F 59 05 5D 17 48 01
//mulss xmm0,[GameAssembly.dll.rdata+3E7CA0]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>43</ID>
              <Description>"增长速率"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>climaxRate</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"NPC移动速度"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,"GameAssembly.dll"+31810A) 
label(returnhere)
label(originalcode)
label(exit)

label(npcSpeedScale)
registersymbol(npcSpeedScale)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss xmm4,[rbx+000000D8]
movss xmm4,[npcSpeedScale]

exit:
jmp returnhere

npcSpeedScale:
dd (float)0.8

"GameAssembly.dll"+31810A:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
unregistersymbol(npcSpeedScale)

dealloc(newmem)
"GameAssembly.dll"+31810A:
db F3 0F 10 A3 D8 00 00 00
//movss xmm4,[rbx+000000D8]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>50</ID>
              <Description>"速度倍率"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>npcSpeedScale</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>function OpenGameProcess(processName, enableMono)
    local pid = getProcessIDFromProcessName(processName)
    if not pid then
        showMessage("先启动游戏，然后重新开启此选项")
        return false
    end
    if getOpenedProcessID() ~= pid then
        openProcess(pid)
    end
    if enableMono then
        if LaunchMonoDataCollector() == 0 then
            showMessage("激活 Mono 功能失败！")
            return false
        end
    end
    return true
end

function mono_getClassFieldOffsets(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    end

    local fields = mono_class_enumFields(classID)
    if not fields or #fields == 0 then
        return nil
    end

    local t = {}
    for i = 1, #fields do
        local name = fields[i].name
        name = string.gsub(name, "&lt;", "")
        name = string.gsub(name, "&gt;k__BackingField", "")

        t[name] = fields[i].offset
    end
    return t
end

function mono_getClassStaticFieldAddress(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    end

    local domains = mono_enumDomains()
    if not domains or #domains == 0 then
        return nil
    end

    local domain = mono_enumDomains()[1]
    return mono_class_getStaticFieldAddress(domain, classID)
end

function mono_getClassInstance(classId_or_namespace, className)
    local classID = classId_or_namespace
    local namespace = classId_or_namespace
    if className then
        classID = mono_findClass(namespace, className)
    else
        namespace = mono_class_getNamespace(classID)
    end

    local instance = mono_class_findInstancesOfClassListOnly(namespace, classID)
    if not instance or #instance == 0 then
        return nil
    end
    return instance[1]
end

function mono_getClassStaticFields(staticBaseAddress, classId)
    local fields = mono_class_enumFields(classId)
    if not fields or #fields == 0 then
        return nil
    end

    local t = {}
    for i = 1, #fields do
        local field = fields[i]
        if field.isStatic then
            local name = field.name
            name = string.gsub(name, "&lt;", "")
            name = string.gsub(name, "&gt;k__BackingField", "")

            t[name] = staticBaseAddress + field.offset
        end
    end
    return t
end

</LuaScript>
</CheatTable>
